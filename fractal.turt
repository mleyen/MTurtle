func f(length, depth)
    if depth == 0 then
        forward length
    else
        f((length/3), (depth-1))
        right 60
        f((length/3), (depth-1))
        left 120
        f((length/3), (depth-1))
        right 60
    endif
endfunc

/*
to line :count :length
 ifelse :count = 1 [fw :length] 
 [
   make "count :count -1 
   line :count :length
   lt 60 line :count :length
   rt 120 line :count :length
   lt 60 line :count :length
  ]
end

to koch :count :length
  rt 30 line :count :length
  rt 120 line :count :length
  rt 120 line :count :length
end

reset
setxy  45 370
koch 5 5
*/

func line(count, length)
    if count == 1 then
        fwd length
    else
        count <- count - 1
        line(count, length)
        left 60
        line(count, length)
        right 120
        line(count, length)
        left 60
        line(count, length)
    endif
endfunc

func koch(count, length)
    right 30
    line(count, length)
    right 120
    line(count, length)
    right 120
    line(count, length)
endfunc
